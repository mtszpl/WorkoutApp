// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutApp2.Data;

#nullable disable

namespace WorkoutApp.Migrations
{
    [DbContext(typeof(WorkoutApp2Context))]
    partial class WorkoutApp2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkoutApp2.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MuscleGroup")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("WorkoutApp2.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MuscleGroup")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("exercisesCount")
                        .HasColumnType("int");

                    b.Property<int>("isTimed")
                        .HasColumnType("int");

                    b.Property<int>("rounds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Workout");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("WorkoutApp2.Models.RepsWorkout", b =>
                {
                    b.HasBaseType("WorkoutApp2.Models.Workout");

                    b.Property<int>("reps")
                        .HasColumnType("int");

                    b.ToTable("RepsWorkout");
                });

            modelBuilder.Entity("WorkoutApp2.Models.TimedWorkout", b =>
                {
                    b.HasBaseType("WorkoutApp2.Models.Workout");

                    b.Property<int>("restTime")
                        .HasColumnType("int");

                    b.Property<int>("workTime")
                        .HasColumnType("int");

                    b.ToTable("TimedWorkout");
                });

            modelBuilder.Entity("WorkoutApp2.Models.Exercise", b =>
                {
                    b.HasOne("WorkoutApp2.Models.Workout", null)
                        .WithMany("exerciseList")
                        .HasForeignKey("WorkoutId");
                });

            modelBuilder.Entity("WorkoutApp2.Models.RepsWorkout", b =>
                {
                    b.HasOne("WorkoutApp2.Models.Workout", null)
                        .WithOne()
                        .HasForeignKey("WorkoutApp2.Models.RepsWorkout", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutApp2.Models.TimedWorkout", b =>
                {
                    b.HasOne("WorkoutApp2.Models.Workout", null)
                        .WithOne()
                        .HasForeignKey("WorkoutApp2.Models.TimedWorkout", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutApp2.Models.Workout", b =>
                {
                    b.Navigation("exerciseList");
                });
#pragma warning restore 612, 618
        }
    }
}
